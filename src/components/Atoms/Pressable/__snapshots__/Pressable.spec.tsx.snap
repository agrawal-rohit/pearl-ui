// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Atoms/Pressable passes the snapshot test for basic setup 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Press me!"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignSelf": "flex-start",
      }
    }
  >
    <View
      animatedStyle={
        {
          "value": {},
        }
      }
      collapsable={false}
      state={
        {
          "__state": {
            "_isReanimatedSharedValue": true,
            "_value": {},
            "addListener": [Function],
            "modify": [Function],
            "removeListener": [Function],
            "value": {},
          },
        }
      }
      style={{}}
      transition={
        {
          "duration": 50,
        }
      }
    >
      Button press
    </View>
  </View>
</View>
`;

exports[`Atoms/Pressable passes the snapshot test when using style props 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    accessibilityLabel="Press me!"
    accessibilityRole="button"
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignSelf": "flex-start",
      }
    }
  >
    <View
      animatedStyle={
        {
          "value": {
            "backgroundColor": "#6A7BFF",
            "borderColor": "#C5CEE0",
            "borderWidth": 2,
          },
        }
      }
      collapsable={false}
      state={
        {
          "__state": {
            "_isReanimatedSharedValue": true,
            "_value": {
              "backgroundColor": "#6A7BFF",
              "borderColor": "#C5CEE0",
              "borderWidth": 2,
            },
            "addListener": [Function],
            "modify": [Function],
            "removeListener": [Function],
            "value": {
              "backgroundColor": "#6A7BFF",
              "borderColor": "#C5CEE0",
              "borderWidth": 2,
            },
          },
        }
      }
      style={
        {
          "backgroundColor": "#6A7BFF",
          "borderColor": "#C5CEE0",
          "borderWidth": 2,
        }
      }
      transition={
        {
          "duration": 50,
        }
      }
    >
      Button press
    </View>
  </View>
</View>
`;
