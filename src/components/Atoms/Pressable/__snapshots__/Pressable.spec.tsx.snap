// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Atoms/Pressable passes the snapshot test for basic setup 1`] = `
<View
  accessibilityHint=""
  accessibilityLabel="Press me!"
  accessibilityRole="button"
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  onLayout={[Function]}
  style={
    Object {
      "alignSelf": undefined,
      "borderRadius": undefined,
      "bottom": undefined,
      "display": "flex",
      "elevation": undefined,
      "end": undefined,
      "left": undefined,
      "margin": undefined,
      "marginBottom": undefined,
      "marginEnd": undefined,
      "marginHorizontal": undefined,
      "marginLeft": undefined,
      "marginRight": undefined,
      "marginStart": undefined,
      "marginTop": undefined,
      "marginVertical": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": undefined,
      "shadowOffset": undefined,
      "shadowOpacity": undefined,
      "shadowRadius": undefined,
      "start": undefined,
      "top": undefined,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "borderRadius": undefined,
        "display": "flex",
        "overflow": "hidden",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "display": "flex",
          },
          Object {
            "backgroundColor": undefined,
            "borderBottomColor": undefined,
            "borderBottomWidth": undefined,
            "borderColor": undefined,
            "borderEndColor": undefined,
            "borderEndWidth": undefined,
            "borderLeftColor": undefined,
            "borderLeftWidth": undefined,
            "borderRightColor": undefined,
            "borderRightWidth": undefined,
            "borderStartColor": undefined,
            "borderStartWidth": undefined,
            "borderStyle": undefined,
            "borderTopColor": undefined,
            "borderTopWidth": undefined,
            "borderWidth": undefined,
            "opacity": undefined,
          },
        ]
      }
    >
      Button press
    </View>
  </View>
</View>
`;

exports[`Atoms/Pressable passes the snapshot test when using style props 1`] = `
<View
  accessibilityHint=""
  accessibilityLabel="Press me!"
  accessibilityRole="button"
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  onLayout={[Function]}
  style={
    Object {
      "alignSelf": undefined,
      "borderRadius": undefined,
      "bottom": undefined,
      "display": "flex",
      "elevation": undefined,
      "end": undefined,
      "left": undefined,
      "margin": undefined,
      "marginBottom": undefined,
      "marginEnd": undefined,
      "marginHorizontal": undefined,
      "marginLeft": undefined,
      "marginRight": undefined,
      "marginStart": undefined,
      "marginTop": undefined,
      "marginVertical": undefined,
      "position": undefined,
      "right": undefined,
      "shadowColor": undefined,
      "shadowOffset": undefined,
      "shadowOpacity": undefined,
      "shadowRadius": undefined,
      "start": undefined,
      "top": undefined,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "borderRadius": undefined,
        "display": "flex",
        "overflow": "hidden",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "#6A7BFF",
            "display": "flex",
          },
          Object {
            "backgroundColor": "#6A7BFF",
            "borderBottomColor": undefined,
            "borderBottomWidth": undefined,
            "borderColor": "#C5CEE0",
            "borderEndColor": undefined,
            "borderEndWidth": undefined,
            "borderLeftColor": undefined,
            "borderLeftWidth": undefined,
            "borderRightColor": undefined,
            "borderRightWidth": undefined,
            "borderStartColor": undefined,
            "borderStartWidth": undefined,
            "borderStyle": undefined,
            "borderTopColor": undefined,
            "borderTopWidth": undefined,
            "borderWidth": 2,
            "opacity": undefined,
          },
        ]
      }
    >
      Button press
    </View>
  </View>
</View>
`;
