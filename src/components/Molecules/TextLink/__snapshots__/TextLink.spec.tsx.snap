// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Molecules/TextLink passes the snapshot test for basic setup 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Text Link press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "display": "flex",
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#6A7BFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Text Link press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/TextLink passes the snapshot test for different color schemes 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Primary text link"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "display": "flex",
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#6A7BFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Primary text link
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Secondary text link"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "display": "flex",
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FF6AC6",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Secondary text link
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/TextLink passes the snapshot test for different sizes 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Text Link press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "display": "flex",
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#6A7BFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          Text Link press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Text Link press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "display": "flex",
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#6A7BFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 13.799999999999999,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 20,
              "transform": Array [],
            }
          }
          variant="btn3"
        >
          Text Link press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Text Link press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "display": "flex",
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#6A7BFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Text Link press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Text Link press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "display": "flex",
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#6A7BFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 18.4,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 26,
              "transform": Array [],
            }
          }
          variant="btn1"
        >
          Text Link press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/TextLink passes the snapshot test when using style props 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Text link press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "backgroundColor": "#6A7BFF",
            "borderColor": "#C5CEE0",
            "borderWidth": 2,
            "display": "flex",
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#6A7BFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Text link press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;
