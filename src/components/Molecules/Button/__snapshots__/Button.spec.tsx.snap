// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Molecules/Button passes the snapshot test for basic setup 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Button press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Button passes the snapshot test for different color schemes 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Primary button"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Primary button
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Secondary button"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#FF6AC6",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Secondary button
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Button passes the snapshot test for different icons 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button with left icon"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
              "transform": Array [],
            }
          }
        >
          <Text />
          <Text
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={true}
            animatedStyle={
              Object {
                "value": Object {
                  "transform": Array [],
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "color": "#FFFFFF",
                "display": "flex",
                "fontFamily": "Poppins-Medium",
                "fontSize": 16.099999999999998,
                "fontStyle": "normal",
                "fontWeight": "500",
                "includeFontPadding": false,
                "letterSpacing": 0,
                "lineHeight": 22,
                "transform": Array [],
              }
            }
            variant="btn2"
          >
            Button with left icon
          </Text>
        </View>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button with right icon"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#FFFFFF",
            "borderColor": "#6A7BFF",
            "borderRadius": 8,
            "borderWidth": 1,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
              "transform": Array [],
            }
          }
        >
          <Text
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={true}
            animatedStyle={
              Object {
                "value": Object {
                  "transform": Array [],
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "color": "#6A7BFF",
                "display": "flex",
                "fontFamily": "Poppins-Medium",
                "fontSize": 16.099999999999998,
                "fontStyle": "normal",
                "fontWeight": "500",
                "includeFontPadding": false,
                "letterSpacing": 0,
                "lineHeight": 22,
                "transform": Array [],
              }
            }
            variant="btn2"
          >
            Button with right icon
          </Text>
          <Text />
        </View>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Button passes the snapshot test for different sizes 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 4,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 8,
            "paddingVertical": 4,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          Button press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 4,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 8,
            "paddingVertical": 8,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 13.799999999999999,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 20,
              "transform": Array [],
            }
          }
          variant="btn3"
        >
          Button press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Button press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 16,
            "paddingVertical": 16,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 18.4,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 26,
              "transform": Array [],
            }
          }
          variant="btn1"
        >
          Button press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Button passes the snapshot test for different variants 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Button press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#FFFFFF",
            "borderColor": "#6A7BFF",
            "borderRadius": 8,
            "borderWidth": 1,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#6A7BFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Button press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#FFFFFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#6A7BFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Button press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Button passes the snapshot test for loading state 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Loading"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              },
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                Object {
                  "color": "#FFFFFF",
                  "flex": 0,
                },
              ],
            ]
          }
        >
          <View
            accessibilityLabel="Loading indicator"
            accessibilityRole="progressbar"
            accessible={true}
            animating={true}
            spinnerSize={15}
            style={
              Object {
                "height": 15,
                "width": 15,
              }
            }
            variant="spinner"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 15,
                    "transform": Array [
                      Object {
                        "rotate": "82.5deg",
                      },
                      Object {
                        "rotate": "0deg",
                      },
                    ],
                    "width": 15,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 7.5,
                      "overflow": "hidden",
                      "width": 15,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 15,
                        "transform": Array [
                          Object {
                            "translateY": 0,
                          },
                          Object {
                            "rotate": "-172.5deg",
                          },
                        ],
                        "width": 15,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 7.5,
                          "overflow": "hidden",
                          "width": 15,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#FFFFFF",
                            "borderRadius": 7.5,
                            "borderWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "bottom": 0,
                  "justifyContent": "center",
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "height": 15,
                    "transform": Array [
                      Object {
                        "rotate": "82.5deg",
                      },
                      Object {
                        "rotate": "0deg",
                      },
                    ],
                    "width": 15,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    Object {
                      "height": 7.5,
                      "overflow": "hidden",
                      "top": 7.5,
                      "width": 15,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "height": 15,
                        "transform": Array [
                          Object {
                            "translateY": -7.5,
                          },
                          Object {
                            "rotate": "352.5deg",
                          },
                        ],
                        "width": 15,
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        Object {
                          "height": 7.5,
                          "overflow": "hidden",
                          "width": 15,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "borderColor": "#FFFFFF",
                            "borderRadius": 7.5,
                            "borderWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          }
                        }
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "transparent",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Basic loading button
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Loading"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "transform": Array [],
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                },
                Array [
                  false,
                  Object {
                    "color": "#FFFFFF",
                    "flex": 0,
                  },
                ],
              ]
            }
          >
            <View
              accessibilityLabel="Loading indicator"
              accessibilityRole="progressbar"
              accessible={true}
              animating={true}
              spinnerSize={15}
              style={
                Object {
                  "height": 15,
                  "width": 15,
                }
              }
              variant="spinner"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 15,
                      "transform": Array [
                        Object {
                          "rotate": "82.5deg",
                        },
                        Object {
                          "rotate": "0deg",
                        },
                      ],
                      "width": 15,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 7.5,
                        "overflow": "hidden",
                        "width": 15,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "height": 15,
                          "transform": Array [
                            Object {
                              "translateY": 0,
                            },
                            Object {
                              "rotate": "-172.5deg",
                            },
                          ],
                          "width": 15,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 7.5,
                            "overflow": "hidden",
                            "width": 15,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "borderColor": "#FFFFFF",
                              "borderRadius": 7.5,
                              "borderWidth": 1.5,
                              "height": 15,
                              "width": 15,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 15,
                      "transform": Array [
                        Object {
                          "rotate": "82.5deg",
                        },
                        Object {
                          "rotate": "0deg",
                        },
                      ],
                      "width": 15,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 7.5,
                        "overflow": "hidden",
                        "top": 7.5,
                        "width": 15,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "height": 15,
                          "transform": Array [
                            Object {
                              "translateY": -7.5,
                            },
                            Object {
                              "rotate": "352.5deg",
                            },
                          ],
                          "width": 15,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 7.5,
                            "overflow": "hidden",
                            "width": 15,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "borderColor": "#FFFFFF",
                              "borderRadius": 7.5,
                              "borderWidth": 1.5,
                              "height": 15,
                              "width": 15,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <Text
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={true}
            animatedStyle={
              Object {
                "value": Object {
                  "transform": Array [],
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "color": "#FFFFFF",
                "display": "flex",
                "fontFamily": "Poppins-Medium",
                "fontSize": 16.099999999999998,
                "fontStyle": "normal",
                "fontWeight": "500",
                "includeFontPadding": false,
                "letterSpacing": 0,
                "lineHeight": 22,
                "marginLeft": 12,
                "transform": Array [],
              }
            }
            variant="btn2"
          >
            Loading
          </Text>
        </View>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Loading"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "transform": Array [],
            }
          }
        >
          <Text
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={true}
            animatedStyle={
              Object {
                "value": Object {
                  "transform": Array [],
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "color": "#FFFFFF",
                "display": "flex",
                "fontFamily": "Poppins-Medium",
                "fontSize": 16.099999999999998,
                "fontStyle": "normal",
                "fontWeight": "500",
                "includeFontPadding": false,
                "letterSpacing": 0,
                "lineHeight": 22,
                "marginRight": 12,
                "transform": Array [],
              }
            }
            variant="btn2"
          >
            Loading
          </Text>
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                },
                Array [
                  false,
                  Object {
                    "color": "#FFFFFF",
                    "flex": 0,
                  },
                ],
              ]
            }
          >
            <View
              accessibilityLabel="Loading indicator"
              accessibilityRole="progressbar"
              accessible={true}
              animating={true}
              spinnerSize={15}
              style={
                Object {
                  "height": 15,
                  "width": 15,
                }
              }
              variant="spinner"
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 15,
                      "transform": Array [
                        Object {
                          "rotate": "82.5deg",
                        },
                        Object {
                          "rotate": "0deg",
                        },
                      ],
                      "width": 15,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 7.5,
                        "overflow": "hidden",
                        "width": 15,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "height": 15,
                          "transform": Array [
                            Object {
                              "translateY": 0,
                            },
                            Object {
                              "rotate": "-172.5deg",
                            },
                          ],
                          "width": 15,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 7.5,
                            "overflow": "hidden",
                            "width": 15,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "borderColor": "#FFFFFF",
                              "borderRadius": 7.5,
                              "borderWidth": 1.5,
                              "height": 15,
                              "width": 15,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "height": 15,
                      "transform": Array [
                        Object {
                          "rotate": "82.5deg",
                        },
                        Object {
                          "rotate": "0deg",
                        },
                      ],
                      "width": 15,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      Object {
                        "height": 7.5,
                        "overflow": "hidden",
                        "top": 7.5,
                        "width": 15,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "height": 15,
                          "transform": Array [
                            Object {
                              "translateY": -7.5,
                            },
                            Object {
                              "rotate": "352.5deg",
                            },
                          ],
                          "width": 15,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          Object {
                            "height": 7.5,
                            "overflow": "hidden",
                            "width": 15,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "borderColor": "#FFFFFF",
                              "borderRadius": 7.5,
                              "borderWidth": 1.5,
                              "height": 15,
                              "width": 15,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Button passes the snapshot test when using style props 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Button press"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderColor": "#C5CEE0",
            "borderRadius": 8,
            "borderWidth": 2,
            "display": "flex",
            "justifyContent": "center",
            "marginVertical": 4,
            "opacity": 1,
            "paddingHorizontal": 12,
            "paddingVertical": 12,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 16.099999999999998,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 22,
              "transform": Array [],
            }
          }
          variant="btn2"
        >
          Button press
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;
