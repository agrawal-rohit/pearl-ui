// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Molecules/Badge passes the snapshot test for different color schemes 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "marginBottom": 12,
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#A2D608",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "marginBottom": 12,
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#FFBF35",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "marginBottom": 12,
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#40D2F7",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "marginBottom": 12,
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#FF4B42",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "marginBottom": 12,
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Badge passes the snapshot test for different sizes 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 20,
            "justifyContent": "center",
            "minWidth": 20,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 4,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 30,
            "justifyContent": "center",
            "minWidth": 30,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 13.799999999999999,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 20,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn3"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 35,
            "justifyContent": "center",
            "minWidth": 35,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 13.799999999999999,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 20,
              "paddingHorizontal": 12,
              "transform": Array [],
            }
          }
          variant="btn3"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Badge passes the snapshot test for different values types 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      />
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          23
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          2+
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text />
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Badge passes the snapshot test for different variants 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 1000,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "marginBottom": 12,
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          2
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    exclusive={true}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
  >
    <View
      accessibilityLabel="Press me!"
      accessibilityRole="button"
      accessible={true}
      style={Object {}}
    >
      <View
        animatedStyle={
          Object {
            "value": Object {
              "opacity": 1,
              "transform": Array [],
            },
          }
        }
        collapsable={false}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "flex-start",
            "backgroundColor": "#6A7BFF",
            "borderRadius": 8,
            "display": "flex",
            "height": 25,
            "justifyContent": "center",
            "marginBottom": 12,
            "minWidth": 25,
            "opacity": 1,
            "transform": Array [],
          }
        }
      >
        <Text
          accessibilityRole="text"
          accessible={true}
          allowFontScaling={true}
          animatedStyle={
            Object {
              "value": Object {
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          style={
            Object {
              "color": "#FFFFFF",
              "display": "flex",
              "fontFamily": "Poppins-Medium",
              "fontSize": 11.5,
              "fontStyle": "normal",
              "fontWeight": "500",
              "includeFontPadding": false,
              "letterSpacing": 0,
              "lineHeight": 16,
              "paddingHorizontal": 8,
              "transform": Array [],
            }
          }
          variant="btn4"
        >
          NEW
        </Text>
      </View>
    </View>
  </RNGestureHandlerButton>
</View>
`;

exports[`Molecules/Badge withBadge HOC works as expected 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "transform": Array [],
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignSelf": "flex-start",
        "display": "flex",
        "transform": Array [],
      }
    }
  >
    <Text />
    <RNGestureHandlerButton
      collapsable={false}
      exclusive={true}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
    >
      <View
        accessibilityLabel="Press me!"
        accessibilityRole="button"
        accessible={true}
        style={Object {}}
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 1,
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          onLayout={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "flex-start",
              "backgroundColor": "#6A7BFF",
              "borderRadius": 1000,
              "display": "flex",
              "height": 20,
              "justifyContent": "center",
              "minWidth": 20,
              "opacity": 1,
              "position": "absolute",
              "right": -5,
              "top": -5,
              "transform": Array [],
              "zIndex": 1300,
            }
          }
        >
          <Text
            accessibilityRole="text"
            accessible={true}
            allowFontScaling={true}
            animatedStyle={
              Object {
                "value": Object {
                  "transform": Array [],
                },
              }
            }
            collapsable={false}
            style={
              Object {
                "color": "#FFFFFF",
                "display": "flex",
                "fontFamily": "Poppins-Medium",
                "fontSize": 11.5,
                "fontStyle": "normal",
                "fontWeight": "500",
                "includeFontPadding": false,
                "letterSpacing": 0,
                "lineHeight": 16,
                "paddingHorizontal": 4,
                "transform": Array [],
              }
            }
            variant="btn4"
          >
            28
          </Text>
        </View>
      </View>
    </RNGestureHandlerButton>
  </View>
  <View
    animatedStyle={
      Object {
        "value": Object {
          "transform": Array [],
        },
      }
    }
    collapsable={false}
    style={
      Object {
        "alignSelf": "flex-start",
        "display": "flex",
        "transform": Array [],
      }
    }
  >
    <Text />
    <RNGestureHandlerButton
      collapsable={false}
      exclusive={true}
      onGestureEvent={[Function]}
      onGestureHandlerEvent={[Function]}
      onGestureHandlerStateChange={[Function]}
      onHandlerStateChange={[Function]}
      rippleColor={0}
    >
      <View
        accessibilityLabel="Press me!"
        accessibilityRole="button"
        accessible={true}
        style={Object {}}
      >
        <View
          animatedStyle={
            Object {
              "value": Object {
                "opacity": 1,
                "transform": Array [],
              },
            }
          }
          collapsable={false}
          onLayout={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "flex-start",
              "backgroundColor": "#6A7BFF",
              "borderRadius": 1000,
              "bottom": -5,
              "display": "flex",
              "height": 25,
              "justifyContent": "center",
              "minWidth": 25,
              "opacity": 1,
              "position": "absolute",
              "right": -5,
              "transform": Array [],
              "zIndex": 1300,
            }
          }
        >
          <Text />
        </View>
      </View>
    </RNGestureHandlerButton>
  </View>
</View>
`;
